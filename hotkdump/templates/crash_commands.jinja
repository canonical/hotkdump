{#
# (mkg): the file uses self-append to evaluate commands depend on
# the information extracted from a prior command invocation. This
# is possible because POSIX guarantees that:
#   "If a read() of file data can be proven (by any means) to occur
#   after a write() of the data, it must reflect that write(), even
#   if the calls are made by different processes."
#}
{% set _ = makedirs(summary_root + "/crash") -%}
sys >> {{ summary_root }}/crash/'1 - System data (sys)'
kmem -i >> {{ summary_root }}/crash/'2 - Memory usage information - "kmem -i"'
net >> {{ summary_root }}/crash/'3 - System network device list - "net"'
dev -d >> {{ summary_root }}/crash/'4 - Disk IO statistics "dev -d"''
mount >> {{ summary_root }}/crash/'5 - Mounts - "mount"'
log | grep -vi audit >> {{ summary_root }}/crash/'6 - Log without audit messages'
bt >> {{ summary_root }}/crash/'7 - Backtrace of the current process - "bt"'
files >> {{ summary_root }}/crash/'8 - Files open by current process - "files"'
vm >> {{ summary_root }}/crash/'9 - Virtual memory of current process - "vm"'
ps -m | grep UN | tail >> {{ summary_root }}/crash/"10 - Longest running blocked processes"
ps -G | sed 's/>//g' | sort -k 8,8 -n | awk '$8 ~ /[0-9]/{ $8 = $8/1024" MB"; print }' | tail -20 | sort -r -k8,8 -g >> {{ summary_root }}/crash/'11 - Top 20 memory consumers'
ps -m | grep UN | tail -n1 | grep -oE "PID: [0-9]+" | grep -oE "[0-9]+" | awk '{print "bt " $1 " >> {{ summary_root }}/crash/12-longest_running_blocked_ps_bt"}' >> {{ commands_file_name }}